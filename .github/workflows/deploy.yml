name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      MONGO_HOST: ${{ secrets.MONGO_HOST }}
      MONGO_PORT: ${{ secrets.MONGO_PORT }}
      MONGO_USER: ${{ secrets.MONGO_USER }}
      MONGO_PASS: ${{ secrets.MONGO_PASS }}
      MONGO_DB: ${{ secrets.MONGO_DB }}
      ALLOWED_ORIGINS: ${{ secrets.PRODUCTION_ALLOWED_ORIGIN }}
      SECRET_KEY: ${{ secrets.JWT_SECRET }}
      VITE_HTTP_API_URL: ${{ secrets.PRODUCTION_HTTP_API_URL }}
      VITE_WS_API_URL: ${{ secrets.PRODUCTION_WS_API_URL }}
    steps:
      - name: Checkout the files
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up ./server environment variables
        run: |
          echo "MONGO_HOST=${MONGO_HOST}" >> .env
          echo "MONGO_PORT=${MONGO_PORT}" >> .env
          echo "MONGO_USER=${MONGO_USER}" >> .env
          echo "MONGO_PASS=${MONGO_PASS}" >> .env
          echo "MONGO_DB=${MONGO_DB}" >> .env
          echo "ALLOWED_ORIGINS=${ALLOWED_ORIGINS}" >> .env
          echo "SECRET_KEY=${SECRET_KEY}" >> .env

      - name: Set up ./web environment variables
        run: |
          echo "VITE_HTTP_API_URL=${VITE_HTTP_API_URL}" >> ./web/.env
          echo "VITE_WS_API_URL=${VITE_WS_API_URL}" >> ./web/.env

      - name: Login to DockerHub
        run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}"

      - name: Build websockets-chat-api
        run: |
          docker build -t websockets-chat-api -f ./docker/dockerfiles/dist/Dockerfile.api ./server
          docker tag websockets-chat-api ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-api

      - name: Build websockets-chat-cron
        run: |
          docker build -t websockets-chat-cron -f ./docker/dockerfiles/dist/Dockerfile.cron ./server
          docker tag websockets-chat-cron ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-cron
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-cron

      - name: Build websockets-chat-react
        run: |
          docker build -t websockets-chat-react -f ./docker/dockerfiles/dist/Dockerfile.react ./web
          docker tag websockets-chat-react ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-react
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-react

      - name: Build websockets-chat-server
        run: |
          docker build -t websockets-chat-server -f ./docker/dockerfiles/dist/Dockerfile.nginx .
          docker tag websockets-chat-server ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-server
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/websockets-chat-server

      # - name: Build and push the Docker images
      #   run: |
      #     docker-compose -f docker-compose.prod.yml build
      #     docker-compose -f docker-compose.prod.yml push

      # - name: SSH into EC2
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_PRIVATE_KEY }}
      #     script: |
      #       cd /home/ubuntu/golang-websockets-chat
      #       git pull
      #       docker-compose -f docker-compose.prod.yml up -d
  # deploy:
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #     - name:


