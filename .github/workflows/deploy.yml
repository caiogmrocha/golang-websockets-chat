name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      MONGO_HOST: ${{ secrets.MONGO_HOST }}
      MONGO_PORT: ${{ secrets.MONGO_PORT }}
      MONGO_USER: ${{ secrets.MONGO_USER }}
      MONGO_PASS: ${{ secrets.MONGO_PASS }}
      MONGO_DB: ${{ secrets.MONGO_DB }}
      ALLOWED_ORIGINS: ${{ secrets.PRODUCTION_ALLOWED_ORIGIN }}
      SECRET_KEY: ${{ secrets.JWT_SECRET }}
      VITE_HTTP_API_URL: ${{ secrets.PRODUCTION_HTTP_API_URL }}
      VITE_WS_API_URL: ${{ secrets.PRODUCTION_WS_API_URL }}
    steps:
      - name: Checkout the files
        uses: actions/checkout@v4

      - name: Set up ./server environment variables
        run: |
          echo "MONGO_HOST=${MONGO_HOST}" >> ./server/.env
          echo "MONGO_PORT=${MONGO_PORT}" >> ./server/.env
          echo "MONGO_USER=${MONGO_USER}" >> ./server/.env
          echo "MONGO_PASS=${MONGO_PASS}" >> ./server/.env
          echo "MONGO_DB=${MONGO_DB}" >> ./server/.env
          echo "ALLOWED_ORIGINS=${ALLOWED_ORIGINS}" >> ./server/.env
          echo "SECRET_KEY=${SECRET_KEY}" >> ./server/.env

      - name: Set up ./web environment variables
        run: |
          echo "VITE_HTTP_API_URL=${VITE_HTTP_API_URL}" >> ./web/.env
          echo "VITE_WS_API_URL=${VITE_WS_API_URL}" >> ./web/.env

      - name: Login to DockerHub
        run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}"

      - name: Build and push the Docker images
        run: |
          docker compose -f docker-compose.prod.yml build
          docker compose -f docker-compose.prod.yml push
  deploy:
    name: Deploy
    needs: build
    runs-on: self-hosted
    steps:
      - name: Create app directories
        run: |
          sudo mkdir -p /app/docker/volumes/mongodb
          cd /app

      - name: Login to DockerHub
        run: sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}"

      - name: Download docker-compose.prod.yml
        run: |
          rm -f docker-compose.prod.yml
          curl -o docker-compose.prod.yml https://raw.githubusercontent.com/caiogmrocha/golang-websockets-chat/refs/heads/main/docker-compose.prod.yml

      - name: Prune the Docker system
        run: sudo docker system prune -a --volumes -f

      - name: Pull the Docker images
        run: sudo docker compose -f docker-compose.prod.yml pull

      - name: Stop the Docker containers
        run: sudo docker compose -f docker-compose.prod.yml down

      - name: Start the Docker containers
        run: sudo docker compose -f docker-compose.prod.yml up -d
