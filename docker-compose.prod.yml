version: "3.9"

services:
  websockets-chat-api:
    container_name: websockets-chat-api
    build:
      context: ./server
      dockerfile: ../docker/dockerfiles/dist/Dockerfile.api
    image: caiogui/websockets-chat-api
    environment:
      MONGO_HOST: websockets-chat-mongodb
    depends_on:
      - websockets-chat-mongodb

  websockets-chat-cron:
    container_name: websockets-chat-cron
    build:
      context: ./server
      dockerfile: ../docker/dockerfiles/dist/Dockerfile.cron
    image: caiogui/websockets-chat-cron
    environment:
      MONGO_HOST: websockets-chat-mongodb
    depends_on:
      - websockets-chat-mongodb

  websockets-chat-react:
    container_name: websockets-chat-react
    build:
      context: ./web
      dockerfile: ../docker/dockerfiles/dist/Dockerfile.react
    image: caiogui/websockets-chat-react
    volumes:
      - react-build:/app/dist

  websockets-chat-server:
    container_name: websockets-chat-server
    build:
      context: .
      dockerfile: ./docker/dockerfiles/dist/Dockerfile.nginx
    image: caiogui/websockets-chat-server
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - react-build:/usr/share/nginx/html

    depends_on:
      - websockets-chat-react
      - websockets-chat-api

  websockets-chat-mongodb:
    container_name: websockets-chat-mongodb
    image: mongo
    restart: always
    volumes:
      - ./docker/volumes/mongodb:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: golang-websockets-chat

volumes:
  react-build:

networks:
  default:
    driver: bridge
